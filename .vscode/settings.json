{
  "editor.renderWhitespace": "all",
  "files.trimTrailingWhitespace": true,
  // For which languages indent-rainbow should be activated (if empty it means all).
  "indentRainbow.includedLanguages": [
    "python"
  ],
  // Using the light mode
  "indentRainbow.indicatorStyle": "light",
  // we use a simple 1 pixel wide line
  "indentRainbow.lightIndicatorStyleLineWidth": 1,
  "indentRainbow.colors": [
    "rgba(255,255,64,0.6)",
    "rgba(127,255,127, 0.6)",
    "rgba(255,127,255, 0.6)",
    "rgba(79,236,236, 0.6)",
  ],
  "workbench.colorCustomizations": {
    "activityBar.background": "#3a1494",
    "titleBar.activeBackground": "#4a197b",
    "titleBar.activeForeground": "#FEFBFC"
  },
  // https://code.visualstudio.com/docs/python/settings-reference#_code-analysis-settings
  "python.analysis.autoFormatStrings": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.autoSearchPaths": false,
  "python.analysis.exclude": [
    "**/.venv/**/*",
    "**/.pytest_cache/**",
  ],
  "python.analysis.ignore": [
    "**/src/lambda/tests/**/*.py"
  ],
  "python.analysis.diagnosticSeverityOverrides": {
    "reportUnusedFunction": "warning",
    "reportTypedDictNotRequiredAccess": "warning",
  },
  "python.terminal.activateEnvironment": true,
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.formatAll.terraform": "explicit"
    }
  },
  "black-formatter.args": [
    "--line-length",
    "${env:PYTHON_MAX_LINE_LENGTH}"
  ],
  "flake8.args": [
    "--max-line-length=255",
    "--ignore=E402,F841,F401,E302,E305,W503"
  ],
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  "python.testing.pytestPath": "python -m pytest",
  "python.testing.cwd": "${workspaceFolder}/src/lambda",
  "python.testing.pytestArgs": [
    "-c",
    "pytest.ini"
  ],
  "cSpell.words": [
    "boto",
    "boto3",
    "devcontainer",
    "healthcheck",
    "venv"
  ]
}